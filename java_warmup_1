
Java Warmup Problems & Solutions

Source:  http://codingbat.com/java/Warmup-1

--#1--  sleepIn               --#17--  icyHot
--#2--  diff21                --#18--  loneTeen
--#3--  nearHundred           --#19--  startOz
--#4--  missingChar           --#20--  in3050
--#5--  backAround            --#21--  lastDigit
--#6--  startHi               --#22--  sumDouble
--#7--  hasTeen               --#23--  makes10
--#8--  mixStart              --#24--  notString
--#9--  close10               --#25--  front3
--#10-- stringE               --#26--  front22
--#11-- everyNth              --#27--  in1020
--#12-- monkeyTrouble         --#28--  delDel
--#13-- parrotTrouble         --#29--  intMax
--#14-- posNeg                --#30--  max1020
--#15-- frontBack             --#31--  endUp
--#16--  or35                 


// ------------------------------------------------------------------------------------

--#1--
The parameter weekday is true if it is a weekday, and the parameter vacation is true if we are on vacation. 
We sleep in if it is not a weekday or we're on vacation. Return true if we sleep in.

Conditions:
sleepIn(false, false) → true
sleepIn(true, false) → false
sleepIn(false, true) → true
----------


Solution:

public boolean sleepIn(boolean weekday, boolean vacation) {
  if (!weekday || vacation) {
    return true;
  }
  
  return false;
}


  // Solution notes: better to write "vacation" than "vacation == true"
  // though they mean exactly the same thing.
  // Likewise "!weekday" is better than "weekday == false".
  // This all can be shortened to: return (!weekday || vacation);
  // Here we just put the return-false last, or could use an if/else.



// ------------------------------------------------------------------------------------

--#2--
Given an int n, return the absolute difference between n and 21, except
return double the absolute difference if n is over 21.

Conditions:
diff21(19) → 2
diff21(10) → 11
diff21(21) → 0
----------


Solution:

public int diff21(int n) {
  if (n <= 21) {
    return 21 - n;
  } else {
    return (n - 21) * 2;
  }
}


// ------------------------------------------------------------------------------------

--#3--
































